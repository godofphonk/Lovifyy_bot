package diary

import (
	"fmt"

	"Lovifyy_bot/internal/models"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// Handler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–Ω–µ–≤–Ω–∏–∫–∞
type Handler struct {
	bot         *tgbotapi.BotAPI
	userManager *models.UserManager
}

// NewHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–Ω–µ–≤–Ω–∏–∫–∞
func NewHandler(bot *tgbotapi.BotAPI, userManager *models.UserManager) *Handler {
	return &Handler{
		bot:         bot,
		userManager: userManager,
	}
}

// HandleDiary –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ú–∏–Ω–∏-–¥–Ω–µ–≤–Ω–∏–∫" –∫–∞–∫ –≤ legacy
func (h *Handler) HandleDiary(callbackQuery *tgbotapi.CallbackQuery) error {
	response := "üìù –ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫\n\n" +
		"–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫:"

	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –≥–µ–Ω–¥–µ—Ä–∞ –∫–∞–∫ –≤ legacy
	buttons := [][]tgbotapi.InlineKeyboardButton{
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë® –ü–∞—Ä–µ–Ω—å", "diary_gender_male"),
			tgbotapi.NewInlineKeyboardButtonData("üë© –î–µ–≤—É—à–∫–∞", "diary_gender_female"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏", "diary_view"),
		),
	}

	diaryKeyboard := tgbotapi.NewInlineKeyboardMarkup(buttons...)

	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = diaryKeyboard
	_, err := h.bot.Send(msg)
	return err
}

// HandleDiaryGender –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª–∞ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞
func (h *Handler) HandleDiaryGender(callbackQuery *tgbotapi.CallbackQuery, gender string) error {
	userID := callbackQuery.From.ID
	h.userManager.SetState(userID, "diary")

	var genderEmoji string
	var genderText string
	if gender == "male" {
		genderEmoji = "üë®"
		genderText = "–ø–∞—Ä–Ω—è"
	} else {
		genderEmoji = "üë©"
		genderText = "–¥–µ–≤—É—à–∫–∏"
	}

	response := fmt.Sprintf("üìù –†–µ–∂–∏–º –º–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è %s %s!\n\n"+
		"–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏, –∑–∞–º–µ—Ç–∫–∏ –∏–ª–∏ —Å–æ–±—ã—Ç–∏—è –¥–Ω—è. "+
		"–Ø –±—É–¥—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å, —á—Ç–æ –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n\n"+
		"–≠—Ç–æ –≤–∞—à–µ –ª–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –∑–∞–ø–∏—Å–µ–π –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π.", genderEmoji, genderText)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	_, err := h.bot.Send(msg)
	return err
}

// HandleDiaryView –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø–∏—Å–µ–π –¥–Ω–µ–≤–Ω–∏–∫–∞
func (h *Handler) HandleDiaryView(callbackQuery *tgbotapi.CallbackQuery) error {
	response := "üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø–∏—Å–µ–π –¥–Ω–µ–≤–Ω–∏–∫–∞\n\n" +
		"–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏ –∏–∑ –º–∏–Ω–∏-–¥–Ω–µ–≤–Ω–∏–∫–∞.\n\n" +
		"–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø–∏—Å–µ–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö."
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	_, err := h.bot.Send(msg)
	return err
}
