package admin

import (
	"fmt"
	"strings"

	"Lovifyy_bot/internal/ai"
	"Lovifyy_bot/internal/history"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// HandleFinalInsightMenu –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Å–∞–π—Ç–∞
func (h *Handler) HandleFinalInsightMenu(callbackQuery *tgbotapi.CallbackQuery) error {
	userID := callbackQuery.From.ID

	if !h.userManager.IsAdmin(userID) {
		msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		_, err := h.bot.Send(msg)
		return err
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –º–µ—Å—è—Ü–∞
	finalMessage := "üéâ –í—ã –ø—Ä–æ—à–ª–∏ —Ü–µ–ª—ã–π –º–µ—Å—è—Ü –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π –∏ —Å–¥–µ–ª–∞–ª–∏ –±–æ–ª—å—à–æ–π —à–∞–≥ –≤ –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö. üíñ\n\n" +
		"–ö–∞–∂–¥—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥, –∫–∞–∂–¥–∞—è —á–µ—Å—Ç–Ω–∞—è –±–µ—Å–µ–¥–∞ –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É —É–∫—Ä–µ–ø–ª—è—é—Ç –≤–∞—à—É —Å–≤—è–∑—å.\n\n" +
		"–ì–æ—Ä–∂—É—Å—å –≤–∞–º–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–∞–º–µ—á–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –¥–µ–ª–∏—Ç—å—Å—è —á—É–≤—Å—Ç–≤–∞–º–∏ –∏ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –º–∞–ª–µ–Ω—å–∫–∏–º —É—Å–ø–µ—Ö–∞–º. " +
		"–í—ã –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è –ø–∞—Ä–∞! ü´ÇüéÄ"

	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Å–∞–π—Ç–∞
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üéØ –ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å–∞–π—Ç", "generate_final_insight"),
		),
	)

	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, finalMessage)
	msg.ReplyMarkup = keyboard
	_, err := h.bot.Send(msg)
	return err
}

// HandleGenerateFinalInsight –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å–∞–π—Ç
func (h *Handler) HandleGenerateFinalInsight(callbackQuery *tgbotapi.CallbackQuery, historyManager *history.Manager, aiClient *ai.OpenAIClient) error {
	userID := callbackQuery.From.ID

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
	processingMsg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, 
		"‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å–∞–π—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –∏—Å—Ç–æ—Ä–∏–∏...")
	_, err := h.bot.Send(processingMsg)
	if err != nil {
		return err
	}

	// –ü–æ–ª—É—á–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	chatHistory, err := historyManager.GetUserHistory(userID, 0)
	if err != nil {
		errorMsg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, 
			"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤")
		h.bot.Send(errorMsg)
		return err
	}

	diaryHistory, err := historyManager.GetUserDiary(userID, 0)
	if err != nil {
		errorMsg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, 
			"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞")
		h.bot.Send(errorMsg)
		return err
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å–∏ –¥–ª—è –º—É–∂—á–∏–Ω—ã –∏ –∂–µ–Ω—â–∏–Ω—ã
	hasMaleEntries := false
	hasFemaleEntries := false

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–Ω–µ–≤–Ω–∏–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≥–µ–Ω–¥–µ—Ä–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
	for _, entry := range diaryHistory {
		lowerMsg := strings.ToLower(entry.Entry)
		
		// –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–∞—Ä–Ω–µ/–º—É–∂—á–∏–Ω–µ
		if strings.Contains(lowerMsg, "–ø–∞—Ä–µ–Ω—å") || 
		   strings.Contains(lowerMsg, "–º—É–∂—á–∏–Ω–∞") ||
		   strings.Contains(lowerMsg, "boyfriend") ||
		   strings.Contains(lowerMsg, "–º—É–∂") {
			hasMaleEntries = true
		}
		
		// –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–µ–≤—É—à–∫–µ/–∂–µ–Ω—â–∏–Ω–µ
		if strings.Contains(lowerMsg, "–¥–µ–≤—É—à–∫–∞") || 
		   strings.Contains(lowerMsg, "–∂–µ–Ω—â–∏–Ω–∞") ||
		   strings.Contains(lowerMsg, "girlfriend") ||
		   strings.Contains(lowerMsg, "–∂–µ–Ω–∞") {
			hasFemaleEntries = true
		}
	}

	// –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–æ–≤
	for _, entry := range chatHistory {
		lowerMsg := strings.ToLower(entry.Message)
		
		if strings.Contains(lowerMsg, "–ø–∞—Ä–µ–Ω—å") || 
		   strings.Contains(lowerMsg, "–º—É–∂—á–∏–Ω–∞") ||
		   strings.Contains(lowerMsg, "boyfriend") ||
		   strings.Contains(lowerMsg, "–º—É–∂") {
			hasMaleEntries = true
		}
		
		if strings.Contains(lowerMsg, "–¥–µ–≤—É—à–∫–∞") || 
		   strings.Contains(lowerMsg, "–∂–µ–Ω—â–∏–Ω–∞") ||
		   strings.Contains(lowerMsg, "girlfriend") ||
		   strings.Contains(lowerMsg, "–∂–µ–Ω–∞") {
			hasFemaleEntries = true
		}
	}

	// –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è AI
	var contextBuilder strings.Builder
	contextBuilder.WriteString("–í–æ—Ç –ø–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –º–µ—Å—è—Ü:\n\n")
	
	contextBuilder.WriteString("=== –ò–°–¢–û–†–ò–Ø –ß–ê–¢–û–í ===\n")
	for i, entry := range chatHistory {
		contextBuilder.WriteString(fmt.Sprintf("–ù–µ–¥–µ–ª—è %d: %s\n", i+1, entry.Message))
	}
	
	contextBuilder.WriteString("\n=== –ó–ê–ü–ò–°–ò –í –î–ù–ï–í–ù–ò–ö–ï ===\n")
	for i, entry := range diaryHistory {
		contextBuilder.WriteString(fmt.Sprintf("–ó–∞–ø–∏—Å—å %d: %s\n", i+1, entry.Entry))
	}

	// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Å–∞–π—Ç–∞
	prompt := "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º –∏ –ø—Å–∏—Ö–æ–ª–æ–≥. –ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å–∞–π—Ç –æ —Ä–∞–∑–≤–∏—Ç–∏–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π –ø–∞—Ä—ã –∑–∞ –º–µ—Å—è—Ü.\n\n" +
		"–í–ê–ñ–ù–û: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏, –Ω–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π —Ñ–∞–∫—Ç—ã. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –º–∞–ª–æ, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ —Ç–æ–º, —á—Ç–æ –µ—Å—Ç—å.\n\n" +
		"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–∞–∫–æ–π:\n" +
		"üåü **–í –ø–µ—Ä–≤—É—é –Ω–µ–¥–µ–ª—é** –≤—ã –Ω–∞—á–∏–Ω–∞–ª–∏ —Å...\n" +
		"üí≠ **–í–æ –≤—Ç–æ—Ä—É—é –Ω–µ–¥–µ–ª—é** –≤—ã –∑–∞–¥—É–º—ã–≤–∞–ª–∏—Å—å –æ...\n" +
		"üöÄ **–ù–∞ —Ç—Ä–µ—Ç—å–µ–π –Ω–µ–¥–µ–ª–µ** –≤—ã —Å–¥–µ–ª–∞–ª–∏ –±–æ–ª—å—à–æ–π —à–∞–≥ –∏ –ø—Ä–µ–æ–¥–æ–ª–µ–ª–∏...\n" +
		"üíñ **–ö —á–µ—Ç–≤–µ—Ä—Ç–æ–π –Ω–µ–¥–µ–ª–µ** –≤—ã –¥–æ—Å—Ç–∏–≥–ª–∏...\n\n" +
		"üéØ **–í–∞—à–∏ –≥–ª–∞–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:**\n" +
		"- –ü–µ—Ä–µ—á–∏—Å–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É—Å–ø–µ—Ö–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏\n\n" +
		"üåà **–ß—Ç–æ –¥–∞–ª—å—à–µ:**\n" +
		"- –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π\n\n" +
		"–¢–æ–Ω: —Ç–µ–ø–ª—ã–π, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π. –ü–æ–∫–∞–∂–∏ —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Ä–æ—Å—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö.\n\n" +
		contextBuilder.String()

	// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Å–∞–π—Ç —á–µ—Ä–µ–∑ AI
	insight, err := aiClient.Generate(prompt)
	if err != nil {
		errorMsg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, 
			"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Å–∞–π—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		h.bot.Send(errorMsg)
		return err
	}

	// –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –∏ –¥–ª—è –º—É–∂—á–∏–Ω—ã, –∏ –¥–ª—è –∂–µ–Ω—â–∏–Ω—ã, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
	if hasMaleEntries && hasFemaleEntries {
		// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Å–∞–π—Ç –¥–ª—è –¥–µ–≤—É—à–∫–∏
		femalePrompt := prompt + "\n\n–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–∏ –î–ï–í–£–®–ö–ò –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö. –ù–∞—á–Ω–∏ —Å '–î–ª—è –¥–µ–≤—É—à–∫–∏:'"
		femaleInsight, err := aiClient.Generate(femalePrompt)
		if err == nil {
			finalInsightMsg := "üë© **–î–ª—è –¥–µ–≤—É—à–∫–∏:**\n\n" + femaleInsight
			msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, finalInsightMsg)
			msg.ParseMode = "Markdown"
			h.bot.Send(msg)
		}

		// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Å–∞–π—Ç –¥–ª—è –ø–∞—Ä–Ω—è
		malePrompt := prompt + "\n\n–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–∏ –ü–ê–†–ù–Ø –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö. –ù–∞—á–Ω–∏ —Å '–î–ª—è –ø–∞—Ä–Ω—è:'"
		maleInsight, err := aiClient.Generate(malePrompt)
		if err == nil {
			finalInsightMsg := "üë® **–î–ª—è –ø–∞—Ä–Ω—è:**\n\n" + maleInsight
			msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, finalInsightMsg)
			msg.ParseMode = "Markdown"
			h.bot.Send(msg)
		}
	} else {
		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–∏–π –∏–Ω—Å–∞–π—Ç
		msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, insight)
		_, err = h.bot.Send(msg)
	}

	return err
}
