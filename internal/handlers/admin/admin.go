package admin

import (
	"Lovifyy_bot/internal/exercises"
	"Lovifyy_bot/internal/models"
	"Lovifyy_bot/internal/services"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// Handler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
type Handler struct {
	bot                 *tgbotapi.BotAPI
	userManager         *models.UserManager
	exerciseManager     *exercises.Manager
	notificationService *services.NotificationService
}

// NewHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω —Ñ—É–Ω–∫—Ü–∏–π
func NewHandler(bot *tgbotapi.BotAPI, userManager *models.UserManager, exerciseManager *exercises.Manager, notificationService *services.NotificationService) *Handler {
	return &Handler{
		bot:                 bot,
		userManager:         userManager,
		exerciseManager:     exerciseManager,
		notificationService: notificationService,
	}
}

// HandleAdminHelp –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
func (h *Handler) HandleAdminHelp(callbackQuery *tgbotapi.CallbackQuery) error {
	userID := callbackQuery.From.ID

	if !h.userManager.IsAdmin(userID) {
		msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		_, err := h.bot.Send(msg)
		return err
	}

	response := "üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Lovifyy Bot\n\n" +
		"üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
		"/setprompt <—Ç–µ–∫—Å—Ç> - –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n" +
		"/prompt - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç\n" +
		"/setwelcome <—Ç–µ–∫—Å—Ç> - –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
		"/welcome - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–µ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n" +
		"/setweek <–Ω–µ–¥–µ–ª—è> <–ø–æ–ª–µ> <–∑–Ω–∞—á–µ–Ω–∏–µ> - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ–¥–µ–ª–∏\n" +
		"/adminhelp - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n" +
		"üí° –ü–æ–ª—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ–¥–µ–ª—å:\n" +
		"‚Ä¢ title - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ–¥–µ–ª–∏\n" +
		"‚Ä¢ welcome - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
		"‚Ä¢ questions - –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–∞—Ä—ã\n" +
		"‚Ä¢ tips - –ø–æ–¥—Å–∫–∞–∑–∫–∏\n" +
		"‚Ä¢ insights - –∏–Ω—Å–∞–π—Ç—ã\n" +
		"‚Ä¢ joint - —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n" +
		"‚Ä¢ diary - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞\n" +
		"‚Ä¢ active - –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø (true/false)\n\n" +
		"–ü—Ä–∏–º–µ—Ä—ã:\n" +
		"`/setweek 1 title –ù–µ–¥–µ–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞`\n" +
		"`/setweek 3 active true` - –æ—Ç–∫—Ä—ã—Ç—å 3 –Ω–µ–¥–µ–ª—é\n" +
		"`/setweek 2 active false` - –∑–∞–∫—Ä—ã—Ç—å 2 –Ω–µ–¥–µ–ª—é\n\n" +
		"‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å—Ä–∞–∑—É –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!"

	// –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—É—é –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–∫ –≤ legacy
	adminKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("ü§ñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–º–ø—Ç", "prompt"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç", "setprompt_menu"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üëã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "welcome"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "setwelcome_menu"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üóìÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", "exercises_menu"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "notifications_menu"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å–∞–π—Ç", "final_insight_menu"),
		),
	)

	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = adminKeyboard
	_, err := h.bot.Send(msg)
	return err
}

// simpleMsg –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
func (h *Handler) simpleMsg(userID int64, text string) error {
	msg := tgbotapi.NewMessage(userID, text)
	_, err := h.bot.Send(msg)
	return err
}
