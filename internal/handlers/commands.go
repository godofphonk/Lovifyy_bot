package handlers

import (
	"fmt"
	"strconv"
	"strings"

	"Lovifyy_bot/internal/models"
	"Lovifyy_bot/internal/services"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// CommandHandler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
type CommandHandler struct {
	bot                 *tgbotapi.BotAPI
	userManager         *models.UserManager
	notificationService *services.NotificationService
}

// NewCommandHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
func NewCommandHandler(bot *tgbotapi.BotAPI, userManager *models.UserManager, notificationService *services.NotificationService) *CommandHandler {
	return &CommandHandler{
		bot:                 bot,
		userManager:         userManager,
		notificationService: notificationService,
	}
}

// HandleStart –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
func (ch *CommandHandler) HandleStart(update tgbotapi.Update) error {
	userID := update.Message.From.ID
	
	// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	ch.userManager.ClearState(userID)
	
	welcomeText := `üå∏ <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä</b>

–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–∏–µ! üëãüíñ –Ø —Ç–∞–∫ —Ä–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å –∑–¥–µ—Å—å –∏ –≤–º–µ—Å—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —ç—Ç–æ –º–∞–ª–µ–Ω—å–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≤–∞—à–∏–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º! ü´Ç

–≠—Ç–æ—Ç —á–∞—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞—Ö–æ–¥–∏—Ç—å –º–æ–º–µ–Ω—Ç—ã —Ä–∞–¥–æ—Å—Ç–∏, —Ç–µ–ø–ª–∞ –∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è, –∑–∞–º–µ—á–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ –≤–º–µ—Å—Ç–µ –¥–µ–ª–∞—Ç—å –≤–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –µ—â—ë –±–æ–ª–µ–µ —Å—á–∞—Å—Ç–ª–∏–≤—ã–º–∏. –ó–¥–µ—Å—å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –≤ —ç—Ç–æ–º:

<b>1Ô∏è‚É£ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏</b> üë©üèº‚Äç‚ù§Ô∏è‚Äçüë®üèª
–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é —è –±—É–¥—É –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –¥–µ–ª–∏—Ç—å—Å—è —á—É–≤—Å—Ç–≤–∞–º–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–∏—è—Ç–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –æ–±—â–µ–Ω–∏—è.
–í–∞–∂–Ω–æ: –≤—Å—ë, —á—Ç–æ –≤—ã –¥–µ–ª–∞–µ—Ç–µ –≤ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è—Ö, –Ω—É–∂–Ω–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤ –º–∏–Ω–∏-–¥–Ω–µ–≤–Ω–∏–∫–µ, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ —É—Å–ø–µ—Ö–∏. üíó

<b>2Ô∏è‚É£ –ú–∏–Ω–∏-–¥–Ω–µ–≤–Ω–∏–∫</b> üíå
–≠—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∫–æ—Ä–æ—Ç–∫–∏—Ö –∑–∞–º–µ—Ç–æ–∫ –æ –≤–∞—à–∏—Ö –Ω–∞–±–ª—é–¥–µ–Ω–∏—è—Ö, –æ—Ç–∫—Ä—ã—Ç–∏—è—Ö –∏ —à–∞–≥–∞—Ö –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö. –î–∞–∂–µ –æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –¥–µ–Ω—å –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å –Ω–∞–≤—ã–∫–∏, –≤–∏–¥–µ—Ç—å —Ä–æ—Å—Ç –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π –∏ –æ—Ç–º–µ—á–∞—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.

üí° –°–æ–≤–µ—Ç: –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ –æ —Ñ–æ—Ä–º–µ –∏–ª–∏ –∏–¥–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–µ–π ‚Äî –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã —ç—Ç–æ –±—ã–ª–æ —á–µ—Å—Ç–Ω–æ –∏ –æ—Ç —Å–µ—Ä–¥—Ü–∞. –ú–∏–Ω–∏-–¥–Ω–µ–≤–Ω–∏–∫ –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å –≤—Å—ë, —á–µ–º—É –≤—ã —É—á–∏—Ç–µ—Å—å –≤ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è—Ö –Ω–µ–¥–µ–ª–∏, –∏ –≤–∏–¥–µ—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.

<b>3Ô∏è‚É£ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö</b> üíí
–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –Ø –¥–∞–º —Å–æ–≤–µ—Ç –∏–ª–∏ –ø–æ–¥—Å–∫–∞–∑–∫—É, —á—Ç–æ–±—ã –æ–±—â–µ–Ω–∏–µ –∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å—Ç–∞–ª–æ –µ—â—ë —Ç–µ–ø–ª–µ–µ. –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏ –¥–Ω–µ–≤–Ω–∏–∫–∞, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—Ç–∏—Ç–µ. ü´∂üèª

üíå –°–æ–≤–µ—Ç –æ—Ç –º–µ–Ω—è: –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å–æ–º, –∑–∞–º–µ—á–∞–π—Ç–µ –º–∞–ª–µ–Ω—å–∫–∏–µ —Ä–∞–¥–æ—Å—Ç–∏, –¥–µ–ª–∏—Ç–µ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –∏ —Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –≤—Å—ë –≤ –º–∏–Ω–∏-–¥–Ω–µ–≤–Ω–∏–∫–µ.
–í–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã, –∏ –∫–∞–∂–¥–∞—è —á–µ—Å—Ç–Ω–∞—è –±–µ—Å–µ–¥–∞, –∫–∞–∂–¥–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É –¥–µ–ª–∞–µ—Ç –∏—Ö –∫—Ä–µ–ø—á–µ –∏ —Ç–µ–ø–ª–µ–µ. üííüéÄ`

	// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí¨ –ß–∞—Ç —Å –ò–ò", "mode_chat"),
			tgbotapi.NewInlineKeyboardButtonData("üìî –î–Ω–µ–≤–Ω–∏–∫", "mode_diary"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", "exercises"),
		),
	)
	
	// –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
	if ch.userManager.IsAdmin(userID) {
		adminRow := tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "admin_panel"),
		)
		keyboard.InlineKeyboard = append(keyboard.InlineKeyboard, adminRow)
	}

	msg := tgbotapi.NewMessage(userID, welcomeText)
	msg.ParseMode = "HTML"
	msg.ReplyMarkup = keyboard

	_, err := ch.bot.Send(msg)
	return err
}

// HandleHelp –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
func (ch *CommandHandler) HandleHelp(update tgbotapi.Update) error {
	userID := update.Message.From.ID
	
	helpText := `üÜò <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Lovifyy Bot</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/menu - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

<b>–†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã:</b>
üí¨ <b>–ß–∞—Ç —Å –ò–ò</b> - –û–±—â–µ–Ω–∏–µ —Å GPT-4o-mini –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º
üìî <b>–î–Ω–µ–≤–Ω–∏–∫</b> - –í–µ–¥–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
üß† <b>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è</b> - –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–∞—Ä

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞:</b>
‚Ä¢ –ó–∞–ø–∏—Å–∏ –ø–æ –Ω–µ–¥–µ–ª—è–º –∏ —Ç–∏–ø–∞–º
‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏
‚Ä¢ –õ–∏—á–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏

<b>–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:</b>
‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
‚Ä¢ –°–æ–≤–µ—Ç—ã –∏ –∏–Ω—Å–∞–π—Ç—ã
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–µ–¥–µ–Ω–∏—é –¥–Ω–µ–≤–Ω–∏–∫–∞`

	if ch.userManager.IsAdmin(userID) {
		helpText += `

<b>üëë –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/admin - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
/notify - –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/setweek - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–µ–ª—è–º–∏`
	}

	msg := tgbotapi.NewMessage(userID, helpText)
	msg.ParseMode = "HTML"

	_, err := ch.bot.Send(msg)
	return err
}

// HandleMenu –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /menu
func (ch *CommandHandler) HandleMenu(update tgbotapi.Update) error {
	// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –≤ /start
	return ch.HandleStart(update)
}

// HandleAdmin –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin
func (ch *CommandHandler) HandleAdmin(update tgbotapi.Update) error {
	userID := update.Message.From.ID
	
	if !ch.userManager.IsAdmin(userID) {
		msg := tgbotapi.NewMessage(userID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		_, err := ch.bot.Send(msg)
		return err
	}
	
	return ch.showAdminPanel(userID)
}

// HandleNotify –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /notify
func (ch *CommandHandler) HandleNotify(update tgbotapi.Update) error {
	userID := update.Message.From.ID
	
	if !ch.userManager.IsAdmin(userID) {
		msg := tgbotapi.NewMessage(userID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		_, err := ch.bot.Send(msg)
		return err
	}
	
	return ch.showNotificationPanel(userID)
}

// showAdminPanel –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
func (ch *CommandHandler) showAdminPanel(userID int64) error {
	text := `üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "admin_notifications"),
			tgbotapi.NewInlineKeyboardButtonData("üóìÔ∏è –ù–µ–¥–µ–ª–∏", "admin_weeks"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "admin_stats"),
			tgbotapi.NewInlineKeyboardButtonData("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "admin_settings"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu"),
		),
	)

	msg := tgbotapi.NewMessage(userID, text)
	msg.ParseMode = "HTML"
	msg.ReplyMarkup = keyboard

	_, err := ch.bot.Send(msg)
	return err
}

// showNotificationPanel –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
func (ch *CommandHandler) showNotificationPanel(userID int64) error {
	text := `üì¢ <b>–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:`

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìî –î–Ω–µ–≤–Ω–∏–∫", "notify_diary"),
			tgbotapi.NewInlineKeyboardButtonData("üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", "notify_exercise"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí™ –ú–æ—Ç–∏–≤–∞—Ü–∏—è", "notify_motivation"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤", "notify_templates"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "admin_panel"),
		),
	)

	msg := tgbotapi.NewMessage(userID, text)
	msg.ParseMode = "HTML"
	msg.ReplyMarkup = keyboard

	_, err := ch.bot.Send(msg)
	return err
}

// HandleSetWeek –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /setweek
func (ch *CommandHandler) HandleSetWeek(update tgbotapi.Update) error {
	userID := update.Message.From.ID
	
	if !ch.userManager.IsAdmin(userID) {
		msg := tgbotapi.NewMessage(userID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		_, err := ch.bot.Send(msg)
		return err
	}
	
	// –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
	args := strings.Fields(update.Message.Text)
	if len(args) < 4 {
		helpText := `üìù <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /setweek</b>

<b>–§–æ—Ä–º–∞—Ç:</b>
/setweek &lt;–Ω–µ–¥–µ–ª—è&gt; &lt;–ø–æ–ª–µ&gt; &lt;–∑–Ω–∞—á–µ–Ω–∏–µ&gt;

<b>–ü—Ä–∏–º–µ—Ä—ã:</b>
/setweek 1 active true
/setweek 2 questions "–ö–∞–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ?"
/setweek 3 tips "–°–æ–≤–µ—Ç: –±–æ–ª—å—à–µ –æ–±—â–∞–π—Ç–µ—Å—å"

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è:</b>
‚Ä¢ active - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏ (true/false)
‚Ä¢ questions - –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
‚Ä¢ tips - —Å–æ–≤–µ—Ç—ã
‚Ä¢ insights - –∏–Ω—Å–∞–π—Ç—ã
‚Ä¢ joint_questions - —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ diary_instructions - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–Ω–µ–≤–Ω–∏–∫—É`

		msg := tgbotapi.NewMessage(userID, helpText)
		msg.ParseMode = "HTML"
		_, err := ch.bot.Send(msg)
		return err
	}
	
	weekStr := args[1]
	field := args[2]
	value := strings.Join(args[3:], " ")
	
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
	weekNum, err := strconv.Atoi(weekStr)
	if err != nil || weekNum < 1 {
		msg := tgbotapi.NewMessage(userID, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏")
		_, err := ch.bot.Send(msg)
		return err
	}
	
	// –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ exercises manager
	// –ü–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—É—à–∫–∞
	successText := fmt.Sprintf("‚úÖ –ù–µ–¥–µ–ª—è %d –æ–±–Ω–æ–≤–ª–µ–Ω–∞:\n<b>%s</b> = %s", weekNum, field, value)
	
	msg := tgbotapi.NewMessage(userID, successText)
	msg.ParseMode = "HTML"
	
	_, err = ch.bot.Send(msg)
	return err
}

// HandleUnknownCommand –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
func (ch *CommandHandler) HandleUnknownCommand(update tgbotapi.Update) error {
	userID := update.Message.From.ID
	
	text := `‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ /menu –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.`

	msg := tgbotapi.NewMessage(userID, text)
	_, err := ch.bot.Send(msg)
	return err
}
