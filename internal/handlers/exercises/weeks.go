package exercises

import (
	"fmt"

	"Lovifyy_bot/internal/exercises"
	"Lovifyy_bot/internal/models"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// Handler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
type Handler struct {
	bot             *tgbotapi.BotAPI
	userManager     *models.UserManager
	exerciseManager *exercises.Manager
}

// NewHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
func NewHandler(bot *tgbotapi.BotAPI, userManager *models.UserManager, exerciseManager *exercises.Manager) *Handler {
	return &Handler{
		bot:             bot,
		userManager:     userManager,
		exerciseManager: exerciseManager,
	}
}

// HandleAdvice –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏"
func (h *Handler) HandleAdvice(callbackQuery *tgbotapi.CallbackQuery) error {
	response := "üóìÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:\n\n" +
		"–ö–∞–∂–¥–∞—è –Ω–µ–¥–µ–ª—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π."

	weekKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("1Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_1"),
			tgbotapi.NewInlineKeyboardButtonData("2Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_2"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("3Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_3"),
			tgbotapi.NewInlineKeyboardButtonData("4Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_4"),
		),
	)

	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = weekKeyboard
	_, err := h.bot.Send(msg)
	return err
}

// HandleWeek –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–µ–¥–µ–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∫–∞–∫ –≤ legacy
func (h *Handler) HandleWeek(callbackQuery *tgbotapi.CallbackQuery, weekNum int) error {
	// –ü–æ–ª—É—á–∞–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –Ω–µ–¥–µ–ª–∏
	exercise, err := h.exerciseManager.GetWeekExercise(weekNum)
	if err != nil {
		msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π.")
		_, err := h.bot.Send(msg)
		return err
	}

	// –ï—Å–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
	if exercise == nil {
		response := fmt.Sprintf("üóìÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è %d –Ω–µ–¥–µ–ª–∏\n\n‚ö†Ô∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", weekNum)
		msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
		_, err := h.bot.Send(msg)
		return err
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	welcomeText := exercise.WelcomeMessage
	if welcomeText == "" {
		welcomeText = fmt.Sprintf("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ %d –Ω–µ–¥–µ–ª—é —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π!", weekNum)
	}

	response := fmt.Sprintf("%s\n\n%s", exercise.Title, welcomeText)

	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–µ–¥–µ–ª–∏ –∫–∞–∫ –≤ legacy
	var buttons [][]tgbotapi.InlineKeyboardButton

	if exercise.Questions != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üíë –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", fmt.Sprintf("week_%d_questions", weekNum)),
		))
	}

	buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏", fmt.Sprintf("week_%d_tips", weekNum)),
	))

	if exercise.Insights != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîç –ò–Ω—Å–∞–π—Ç", fmt.Sprintf("week_%d_insights", weekNum)),
		))
	}

	if exercise.JointQuestions != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë´ –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã", fmt.Sprintf("week_%d_joint", weekNum)),
		))
	}

	if exercise.DiaryInstructions != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –ß—Ç–æ –ø–∏—Å–∞—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ", fmt.Sprintf("week_%d_diary", weekNum)),
		))
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –Ω–µ–¥–µ–ª—å"
	buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("‚¨ÖÔ∏è –ö –≤—ã–±–æ—Ä—É –Ω–µ–¥–µ–ª—å", "advice"),
	))

	weekKeyboard := tgbotapi.NewInlineKeyboardMarkup(buttons...)

	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = weekKeyboard
	_, err = h.bot.Send(msg)
	return err
}
