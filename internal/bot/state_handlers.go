package bot

import (
	"fmt"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// handleCustomNotificationMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
func (b *EnterpriseBot) handleCustomNotificationMessage(userID int64, messageText string) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
	if !b.userManager.IsAdmin(userID) {
		b.userManager.ClearState(userID)
		return b.suggestMode(userID)
	}

	// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	b.userManager.ClearState(userID)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
	err := b.notificationService.SendCustomNotification(messageText)
	if err != nil {
		msg := tgbotapi.NewMessage(userID, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: "+err.Error())
		b.telegram.Send(msg)
		return err
	}

	// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
	confirmMsg := "‚úÖ –ö–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!\n\nüìù –¢–µ–∫—Å—Ç:\n" + messageText
	msg := tgbotapi.NewMessage(userID, confirmMsg)
	_, err = b.telegram.Send(msg)
	return err
}

// handleCustomNotificationScheduleMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
func (b *EnterpriseBot) handleCustomNotificationScheduleMessage(userID int64, messageText string) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
	if !b.userManager.IsAdmin(userID) {
		b.userManager.ClearState(userID)
		return b.suggestMode(userID)
	}

	// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	b.userManager.ClearState(userID)

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
	text := "‚è∞ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:\n\nüìù –¢–µ–∫—Å—Ç:\n" + messageText

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
	// –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –ø–æ–∫–∞–∂–µ–º –±–∞–∑–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—Ä–µ–º–µ–Ω–∏
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ß–µ—Ä–µ–∑ 1 —á–∞—Å", "custom_schedule_1h_"+messageText),
			tgbotapi.NewInlineKeyboardButtonData("–ß–µ—Ä–µ–∑ 3 —á–∞—Å–∞", "custom_schedule_3h_"+messageText),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ó–∞–≤—Ç—Ä–∞ –≤ 10:00", "custom_schedule_tomorrow_"+messageText),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "schedule_notification"),
		),
	)

	msg := tgbotapi.NewMessage(userID, text)
	msg.ReplyMarkup = kb
	_, err := b.telegram.Send(msg)
	return err
}

// handleScheduleCustomTextMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
func (b *EnterpriseBot) handleScheduleCustomTextMessage(userID int64, messageText string) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
	if !b.userManager.IsAdmin(userID) {
		b.userManager.ClearState(userID)
		return b.suggestMode(userID)
	}

	// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	b.userManager.ClearState(userID)

	// TODO: –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	// –ü–æ–∫–∞ —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
	confirmMsg := "‚úÖ –ö–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–æ!\n\nüìù –¢–µ–∫—Å—Ç:\n" + messageText + 
		"\n\n‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–ª—è –ø–æ–ª–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∞—Ç—É/–≤—Ä–µ–º—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
	
	msg := tgbotapi.NewMessage(userID, confirmMsg)
	_, err := b.telegram.Send(msg)
	return err
}

// handleCustomTimeMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
func (b *EnterpriseBot) handleCustomTimeMessage(userID int64, messageText string, state string) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
	if !b.userManager.IsAdmin(userID) {
		b.userManager.ClearState(userID)
		return b.suggestMode(userID)
	}

	// –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è: custom_time_13.10.2025
	parts := strings.Split(state, "_")
	if len(parts) < 3 {
		b.userManager.ClearState(userID)
		msg := tgbotapi.NewMessage(userID, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è")
		b.telegram.Send(msg)
		return nil
	}

	selectedDate := parts[2] // 13.10.2025

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
	if !b.isValidTimeFormat(messageText) {
		msg := tgbotapi.NewMessage(userID, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä: 14:30)")
		b.telegram.Send(msg)
		return nil
	}

	// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	b.userManager.ClearState(userID)

	// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
	response := fmt.Sprintf("üì¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:\n\n"+
		"üìÖ –î–∞—Ç–∞: %s\n"+
		"üïê –í—Ä–µ–º—è: %s (UTC+5)", selectedDate, messageText)

	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–∏–ø–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
	typeButtons := [][]tgbotapi.InlineKeyboardButton{
		{
			tgbotapi.NewInlineKeyboardButtonData("üíå –ú–∏–Ω–∏-–¥–Ω–µ–≤–Ω–∏–∫", fmt.Sprintf("schedule_type_%s_%s_diary", selectedDate, messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("üë©üèº‚Äç‚ù§Ô∏è‚Äçüë®üèª –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏", fmt.Sprintf("schedule_type_%s_%s_exercise", selectedDate, messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("üíí –ú–æ—Ç–∏–≤–∞—Ü–∏—è", fmt.Sprintf("schedule_type_%s_%s_motivation", selectedDate, messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("‚úèÔ∏è –ö–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", fmt.Sprintf("schedule_type_%s_%s_custom", selectedDate, messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –≤—Ä–µ–º–µ–Ω–∏", fmt.Sprintf("schedule_date_%s", selectedDate)),
		},
	}

	keyboard := tgbotapi.NewInlineKeyboardMarkup(typeButtons...)
	msg := tgbotapi.NewMessage(userID, response)
	msg.ReplyMarkup = keyboard
	_, err := b.telegram.Send(msg)
	return err
}

// handleCustomDateMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–∞—Å—Ç–æ–º–Ω–æ–π –¥–∞—Ç—ã
func (b *EnterpriseBot) handleCustomDateMessage(userID int64, messageText string) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
	if !b.userManager.IsAdmin(userID) {
		b.userManager.ClearState(userID)
		return b.suggestMode(userID)
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
	if !b.isValidDateFormat(messageText) {
		msg := tgbotapi.NewMessage(userID, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä: 15.10.2025)")
		b.telegram.Send(msg)
		return nil
	}

	// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	b.userManager.ClearState(userID)

	// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
	response := fmt.Sprintf("üïê –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è %s:\n\n"+
		"‚ö†Ô∏è –í—Ä–µ–º—è —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ UTC+5 (–ê–ª–º–∞—Ç—ã/–¢–∞—à–∫–µ–Ω—Ç)", messageText)

	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≤—Ä–µ–º–µ–Ω–µ–º
	timeButtons := [][]tgbotapi.InlineKeyboardButton{
		{
			tgbotapi.NewInlineKeyboardButtonData("üåÖ 06:00", fmt.Sprintf("schedule_time_%s_06:00", messageText)),
			tgbotapi.NewInlineKeyboardButtonData("üåÑ 08:00", fmt.Sprintf("schedule_time_%s_08:00", messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("‚òÄÔ∏è 10:00", fmt.Sprintf("schedule_time_%s_10:00", messageText)),
			tgbotapi.NewInlineKeyboardButtonData("üåû 12:00", fmt.Sprintf("schedule_time_%s_12:00", messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("üåá 15:00", fmt.Sprintf("schedule_time_%s_15:00", messageText)),
			tgbotapi.NewInlineKeyboardButtonData("üåÜ 18:00", fmt.Sprintf("schedule_time_%s_18:00", messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("üåÉ 20:00", fmt.Sprintf("schedule_time_%s_20:00", messageText)),
			tgbotapi.NewInlineKeyboardButtonData("üåô 22:00", fmt.Sprintf("schedule_time_%s_22:00", messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("üïõ 00:00", fmt.Sprintf("schedule_time_%s_00:00", messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("‚è∞ –°–≤–æ–µ –≤—Ä–µ–º—è", fmt.Sprintf("schedule_custom_time_%s", messageText)),
		},
		{
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –¥–∞—Ç–∞–º", "schedule_notification"),
		},
	}

	keyboard := tgbotapi.NewInlineKeyboardMarkup(timeButtons...)
	msg := tgbotapi.NewMessage(userID, response)
	msg.ReplyMarkup = keyboard
	_, err := b.telegram.Send(msg)
	return err
}

// isValidTimeFormat –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –ß–ß:–ú–ú
func (b *EnterpriseBot) isValidTimeFormat(timeStr string) bool {
	_, err := time.Parse("15:04", timeStr)
	return err == nil
}

// isValidDateFormat –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –î–î.–ú–ú.–ì–ì–ì–ì
func (b *EnterpriseBot) isValidDateFormat(dateStr string) bool {
	_, err := time.Parse("02.01.2006", dateStr)
	return err == nil
}
