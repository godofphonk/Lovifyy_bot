package bot

import (
	"fmt"
	"log"
	"strconv"
	"strings"
	"sync"
	"time"

	"Lovifyy_bot/internal/ai"
	"Lovifyy_bot/internal/exercises"
	"Lovifyy_bot/internal/history"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// RateLimiter –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
type RateLimiter struct {
	Users map[int64]time.Time
	Mutex sync.RWMutex
}

// NewRateLimiter —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π rate limiter
func NewRateLimiter() *RateLimiter {
	return &RateLimiter{
		Users: make(map[int64]time.Time),
	}
}

// IsAllowed –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
func (rl *RateLimiter) IsAllowed(userID int64) bool {
	rl.Mutex.Lock()
	defer rl.Mutex.Unlock()
	
	lastMessage, exists := rl.Users[userID]
	now := time.Now()
	
	// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: 1 —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ 3 —Å–µ–∫—É–Ω–¥—ã
	if exists && now.Sub(lastMessage) < 3*time.Second {
		return false
	}
	
	rl.Users[userID] = now
	return true
}

// isAdmin –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
func (b *Bot) isAdmin(userID int64) bool {
	for _, adminID := range b.adminIDs {
		if adminID == userID {
			return true
		}
	}
	return false
}

// setUserState —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func (b *Bot) setUserState(userID int64, state string) {
	b.stateMutex.Lock()
	defer b.stateMutex.Unlock()
	b.userStates[userID] = state
}

// getUserState –ø–æ–ª—É—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func (b *Bot) getUserState(userID int64) string {
	b.stateMutex.RLock()
	defer b.stateMutex.RUnlock()
	state, exists := b.userStates[userID]
	if !exists {
		return "" // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
	}
	return state
}

// Bot –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç Telegram –±–æ—Ç–∞ —Å –ò–ò
type Bot struct {
	telegram     *tgbotapi.BotAPI
	ai           *ai.OllamaClient
	history      *history.Manager
	exercises    *exercises.Manager
	rateLimiter  *RateLimiter
	systemPrompt string
	adminIDs     []int64
	userStates   map[int64]string // —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (chat, diary)
	stateMutex   sync.RWMutex     // –º—å—é—Ç–µ–∫—Å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º
}

// NewBot —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
func NewBot(telegramToken, systemPrompt string, adminIDs []int64) *Bot {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram –±–æ—Ç–∞
	bot, err := tgbotapi.NewBotAPI(telegramToken)
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Telegram –±–æ—Ç–∞:", err)
	}

	bot.Debug = false
	log.Printf("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ %s", bot.Self.UserName)

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ (–ø–æ—è–≤—è—Ç—Å—è –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞)
	log.Println("üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞...")

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–µ–Ω—é
	commands := []tgbotapi.BotCommand{
		{Command: "start", Description: "üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"},
		{Command: "chat", Description: "üí¨ –û–±—ã—á–Ω–∞—è –±–µ—Å–µ–¥–∞"},
		{Command: "advice", Description: "üóìÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏"},
		{Command: "diary", Description: "üìù –ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫"},
		{Command: "adminhelp", Description: "üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"},
	}
	
	setCommands := tgbotapi.NewSetMyCommands(commands...)
	if _, err := bot.Request(setCommands); err != nil {
		log.Printf("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã: %v", err)
	} else {
		log.Println("‚úÖ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AI –∫–ª–∏–µ–Ω—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–µ–≥–∫—É—é –º–æ–¥–µ–ª—å)
	aiClient := ai.NewOllamaClient("gemma3:1b")
	
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å AI
	if err := aiClient.TestConnection(); err != nil {
		log.Fatal("AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:", err)
	}
	log.Println("‚úÖ AI –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∏—Å—Ç–æ—Ä–∏–∏
	historyManager := history.NewManager()
	log.Println("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
	exercisesManager := exercises.NewManager()
	log.Println("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")

	return &Bot{
		telegram:     bot,
		ai:           aiClient,
		history:      historyManager,
		exercises:    exercisesManager,
		rateLimiter:  NewRateLimiter(),
		systemPrompt: systemPrompt,
		adminIDs:     adminIDs,
		userStates:   make(map[int64]string),
	}
}

// Start –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞
func (b *Bot) Start() {
	// –£–¥–∞–ª—è–µ–º webhook –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
	del := tgbotapi.DeleteWebhookConfig{DropPendingUpdates: true}
	if _, err := b.telegram.Request(del); err != nil {
		log.Printf("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook: %v", err)
	}

	// –†—É—á–Ω–æ–π polling —Å offset –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
	offset := 0
	for {
		u := tgbotapi.UpdateConfig{
			Offset:  offset,
			Limit:   100,
			Timeout: 60,
		}

		updates, err := b.telegram.GetUpdates(u)
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–ø–¥–µ–π—Ç–æ–≤: %v", err)
			time.Sleep(3 * time.Second)
			continue
		}

		for _, update := range updates {
			if update.Message != nil {
				go b.handleMessage(update.Message)
			} else if update.CallbackQuery != nil {
				go b.handleCallbackQuery(update.CallbackQuery)
			}
			offset = update.UpdateID + 1
		}
	}
}

// handleMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
func (b *Bot) handleMessage(message *tgbotapi.Message) {
	userID := message.From.ID
	username := message.From.UserName
	if username == "" {
		username = message.From.FirstName
	}
	
	log.Printf("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç %s (ID: %d): %s", username, userID, message.Text)

	// –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
	if !b.validateMessage(message) {
		return
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting
	if !b.rateLimiter.IsAllowed(userID) {
		b.sendMessage(message.Chat.ID, "‚è∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")
		return
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
	if message.IsCommand() {
		b.handleCommand(message)
		return
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ –ò–ò —Å –∏—Å—Ç–æ—Ä–∏–µ–π
	b.handleAIMessage(message)
}

// validateMessage –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
func (b *Bot) validateMessage(message *tgbotapi.Message) bool {
	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	if message.Text == "" {
		return false
	}
	
	// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤)
	if len(message.Text) > 4000 {
		b.sendMessage(message.Chat.ID, "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤.")
		return false
	}
	
	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º (–ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–∏–º–≤–æ–ª—ã)
	if b.isSpamMessage(message.Text) {
		b.sendMessage(message.Chat.ID, "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ —Å–ø–∞–º.")
		return false
	}
	
	return true
}

// isSpamMessage –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–∞–º–æ–º
func (b *Bot) isSpamMessage(text string) bool {
	// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–∏–º–≤–æ–ª—ã
	if len(text) > 10 {
		charCount := make(map[rune]int)
		for _, char := range text {
			charCount[char]++
		}
		
		// –ï—Å–ª–∏ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª—å—à–µ 70% —Å–æ–æ–±—â–µ–Ω–∏—è
		for _, count := range charCount {
			if float64(count)/float64(len(text)) > 0.7 {
				return true
			}
		}
	}
	
	return false
}

// handleCallbackQuery –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è inline –∫–Ω–æ–ø–æ–∫
func (b *Bot) handleCallbackQuery(callbackQuery *tgbotapi.CallbackQuery) {
	data := callbackQuery.Data
	userID := callbackQuery.From.ID
	
	log.Printf("–ü–æ–ª—É—á–µ–Ω callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %s", userID, data)
	
	// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback
	callback := tgbotapi.NewCallback(callbackQuery.ID, "")
	b.telegram.Request(callback)
	
	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback –Ω–∞–ø—Ä—è–º—É—é –ø–æ –¥–∞–Ω–Ω—ã–º
	switch data {
	case "chat":
		b.handleChatCallback(callbackQuery)
	case "advice":
		b.handleAdviceCallback(callbackQuery)
	case "diary":
		b.handleDiaryCallback(callbackQuery)
	case "week_1":
		b.handleWeekCallback(callbackQuery, 1)
	case "week_2":
		b.handleWeekCallback(callbackQuery, 2)
	case "week_3":
		b.handleWeekCallback(callbackQuery, 3)
	case "week_4":
		b.handleWeekCallback(callbackQuery, 4)
	case "adminhelp":
		b.handleAdminHelpCallback(callbackQuery)
	case "prompt":
		b.handlePromptCallback(callbackQuery)
	case "setprompt_menu":
		b.handleSetPromptMenuCallback(callbackQuery)
	case "exercises_menu":
		b.handleExercisesMenuCallback(callbackQuery)
	case "exercise_week_1":
		b.handleExerciseWeekCallback(callbackQuery, 1)
	case "exercise_week_2":
		b.handleExerciseWeekCallback(callbackQuery, 2)
	case "exercise_week_3":
		b.handleExerciseWeekCallback(callbackQuery, 3)
	case "exercise_week_4":
		b.handleExerciseWeekCallback(callbackQuery, 4)
	default:
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ callback –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ–¥–µ–ª–∏
		if strings.HasPrefix(data, "week_") && strings.Contains(data, "_") {
			parts := strings.Split(data, "_")
			if len(parts) >= 3 {
				week, err := strconv.Atoi(parts[1])
				if err == nil && week >= 1 && week <= 4 {
					action := strings.Join(parts[2:], "_")
					b.handleWeekActionCallback(callbackQuery, week, action)
					return
				}
			}
		}
		
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ callback –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ–¥–µ–ª–∏
		if strings.HasPrefix(data, "admin_week_") {
			parts := strings.Split(data, "_")
			if len(parts) >= 4 {
				week, err := strconv.Atoi(parts[2])
				if err == nil && week >= 1 && week <= 4 {
					field := strings.Join(parts[3:], "_")
					b.handleAdminWeekFieldCallback(callbackQuery, week, field)
					return
				}
			}
		}
		
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ callback –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞
		if strings.HasPrefix(data, "diary_week_") {
			parts := strings.Split(data, "_")
			if len(parts) >= 3 {
				week, err := strconv.Atoi(parts[2])
				if err == nil && week >= 1 && week <= 4 {
					b.handleDiaryWeekCallback(callbackQuery, week)
					return
				}
			}
		}
		
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ callback –¥–ª—è —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞
		if strings.HasPrefix(data, "diary_") && strings.Contains(data, "_type_") {
			parts := strings.Split(data, "_")
			if len(parts) >= 4 {
				week, err := strconv.Atoi(parts[1])
				if err == nil && week >= 1 && week <= 4 {
					entryType := strings.Join(parts[3:], "_")
					b.handleDiaryTypeCallback(callbackQuery, week, entryType)
					return
				}
			}
		}
		// –ï—Å–ª–∏ callback –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º —Ñ–µ–π–∫–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		fakeMessage := &tgbotapi.Message{
			MessageID: callbackQuery.Message.MessageID,
			From:      callbackQuery.From,
			Chat:      callbackQuery.Message.Chat,
			Date:      callbackQuery.Message.Date,
			Text:      "/" + data,
		}
		b.handleCommand(fakeMessage)
	}
}

// handleChatCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û–±—ã—á–Ω–∞—è –±–µ—Å–µ–¥–∞"
func (b *Bot) handleChatCallback(callbackQuery *tgbotapi.CallbackQuery) {
	userID := callbackQuery.From.ID
	b.setUserState(userID, "chat")
	
	response := "üí¨ –†–µ–∂–∏–º –æ–±—ã—á–Ω–æ–π –±–µ—Å–µ–¥—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
		"–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. " +
		"–Ø –±—É–¥—É –ø–æ–º–Ω–∏—Ç—å –Ω–∞—à—É –±–µ—Å–µ–¥—É –∏ –æ—Ç–≤–µ—á–∞—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–∞—à–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.\n\n" +
		"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /advice"
	b.sendMessage(callbackQuery.Message.Chat.ID, response)
}

// handleAdviceCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏"
func (b *Bot) handleAdviceCallback(callbackQuery *tgbotapi.CallbackQuery) {
	// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
	activeWeeks := b.exercises.GetActiveWeeks()
	
	if len(activeWeeks) == 0 {
		response := "üóìÔ∏è **–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏**\n\n" +
			"‚ö†Ô∏è –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–µ–¥–µ–ª—å.\n" +
			"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∏ –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º."
		b.sendMessage(callbackQuery.Message.Chat.ID, response)
		return
	}
	
	response := "üóìÔ∏è **–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é –Ω–µ–¥–µ–ª—é:**\n\n" +
		"–ö–∞–∂–¥–∞—è –Ω–µ–¥–µ–ª—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π."
	
	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
	var buttons [][]tgbotapi.InlineKeyboardButton
	var currentRow []tgbotapi.InlineKeyboardButton
	
	weekEmojis := []string{"1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£"}
	
	for _, week := range activeWeeks {
		button := tgbotapi.NewInlineKeyboardButtonData(
			fmt.Sprintf("%s –ù–µ–¥–µ–ª—è", weekEmojis[week-1]), 
			fmt.Sprintf("week_%d", week),
		)
		currentRow = append(currentRow, button)
		
		// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
		if len(currentRow) == 2 {
			buttons = append(buttons, currentRow)
			currentRow = []tgbotapi.InlineKeyboardButton{}
		}
	}
	
	// –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
	if len(currentRow) > 0 {
		buttons = append(buttons, currentRow)
	}
	
	weekKeyboard := tgbotapi.NewInlineKeyboardMarkup(buttons...)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = weekKeyboard
	b.telegram.Send(msg)
}

// handleWeekCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏
func (b *Bot) handleWeekCallback(callbackQuery *tgbotapi.CallbackQuery, week int) {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –Ω–µ–¥–µ–ª—è
	if !b.exercises.IsWeekActive(week) {
		response := fmt.Sprintf("üóìÔ∏è **–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è %d –Ω–µ–¥–µ–ª–∏**\n\n‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –∑–∞–∫—Ä—ã—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é –Ω–µ–¥–µ–ª—é.", week)
		b.sendMessage(callbackQuery.Message.Chat.ID, response)
		return
	}
	
	// –ü–æ–ª—É—á–∞–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –Ω–µ–¥–µ–ª–∏
	exercise, err := b.exercises.GetWeekExercise(week)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –Ω–µ–¥–µ–ª–∏ %d: %v", week, err)
		b.sendMessage(callbackQuery.Message.Chat.ID, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π.")
		return
	}
	
	// –ï—Å–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
	if exercise == nil {
		response := fmt.Sprintf("üóìÔ∏è **–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è %d –Ω–µ–¥–µ–ª–∏**\n\n‚ö†Ô∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", week)
		b.sendMessage(callbackQuery.Message.Chat.ID, response)
		return
	}
	
	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	welcomeText := exercise.WelcomeMessage
	if welcomeText == "" {
		welcomeText = fmt.Sprintf("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ %d –Ω–µ–¥–µ–ª—é —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π!", week)
	}
	
	response := fmt.Sprintf("üóìÔ∏è **%s**\n\n%s", exercise.Title, welcomeText)
	
	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–µ–¥–µ–ª–∏
	var buttons [][]tgbotapi.InlineKeyboardButton
	
	if exercise.Questions != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùì –í–æ–ø—Ä–æ—Å—ã", fmt.Sprintf("week_%d_questions", week)),
		))
	}
	
	buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏", fmt.Sprintf("week_%d_tips", week)),
	))
	
	if exercise.Insights != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîç –ò–Ω—Å–∞–π—Ç", fmt.Sprintf("week_%d_insights", week)),
		))
	}
	
	if exercise.JointQuestions != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë´ –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã", fmt.Sprintf("week_%d_joint", week)),
		))
	}
	
	if exercise.DiaryInstructions != "" {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –ß—Ç–æ –ø–∏—Å–∞—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ", fmt.Sprintf("week_%d_diary", week)),
		))
	}
	
	weekKeyboard := tgbotapi.NewInlineKeyboardMarkup(buttons...)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = weekKeyboard
	b.telegram.Send(msg)
}

// handleWeekActionCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤–Ω—É—Ç—Ä–∏ –Ω–µ–¥–µ–ª–∏
func (b *Bot) handleWeekActionCallback(callbackQuery *tgbotapi.CallbackQuery, week int, action string) {
	exercise, err := b.exercises.GetWeekExercise(week)
	if err != nil || exercise == nil {
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
		return
	}
	
	var response string
	
	switch action {
	case "questions":
		if exercise.Questions != "" {
			response = fmt.Sprintf("‚ùì **–í–æ–ø—Ä–æ—Å—ã –¥–ª—è %d –Ω–µ–¥–µ–ª–∏**\n\n%s", week, exercise.Questions)
		} else {
			response = "‚ùì –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
		}
		
	case "tips":
		if exercise.Tips != "" {
			response = fmt.Sprintf("üí° **–ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è %d –Ω–µ–¥–µ–ª–∏**\n\n%s", week, exercise.Tips)
		} else {
			response = "üí° **–ü–æ–¥—Å–∫–∞–∑–∫–∏**\n\n‚Ä¢ –ë—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º\n‚Ä¢ –°–ª—É—à–∞–π—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ\n‚Ä¢ –ù–µ —Å—É–¥–∏—Ç–µ, –∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ\n‚Ä¢ –î–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏ —á–µ—Å—Ç–Ω–æ"
		}
		
	case "insights":
		if exercise.Insights != "" {
			response = fmt.Sprintf("üîç **–ò–Ω—Å–∞–π—Ç –¥–ª—è %d –Ω–µ–¥–µ–ª–∏**\n\n%s", week, exercise.Insights)
		} else {
			response = "üîç –ò–Ω—Å–∞–π—Ç—ã –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
		}
		
	case "joint":
		if exercise.JointQuestions != "" {
			response = fmt.Sprintf("üë´ **–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è %d –Ω–µ–¥–µ–ª–∏**\n\n%s", week, exercise.JointQuestions)
		} else {
			response = "üë´ –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
		}
		
	case "diary":
		if exercise.DiaryInstructions != "" {
			response = fmt.Sprintf("üìù **–ß—Ç–æ –ø–∏—Å–∞—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ (%d –Ω–µ–¥–µ–ª—è)**\n\n%s", week, exercise.DiaryInstructions)
		} else {
			response = "üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
		}
		
	default:
		response = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
	}
	
	b.sendMessage(callbackQuery.Message.Chat.ID, response)
}

// handleDiaryCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫"
func (b *Bot) handleDiaryCallback(callbackQuery *tgbotapi.CallbackQuery) {
	// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
	activeWeeks := b.exercises.GetActiveWeeks()
	
	if len(activeWeeks) == 0 {
		response := "üìù **–ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫**\n\n" +
			"‚ö†Ô∏è –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–µ–¥–µ–ª—å –¥–ª—è –∑–∞–ø–∏—Å–µ–π.\n" +
			"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–¥–µ–ª—è–º."
		b.sendMessage(callbackQuery.Message.Chat.ID, response)
		return
	}
	
	response := "üìù **–ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫**\n\n" +
		"–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é –Ω–µ–¥–µ–ª—é –¥–ª—è –∑–∞–ø–∏—Å–∏:"
	
	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
	var buttons [][]tgbotapi.InlineKeyboardButton
	var currentRow []tgbotapi.InlineKeyboardButton
	
	weekEmojis := []string{"1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£"}
	
	for _, week := range activeWeeks {
		button := tgbotapi.NewInlineKeyboardButtonData(
			fmt.Sprintf("%s –ù–µ–¥–µ–ª—è", weekEmojis[week-1]), 
			fmt.Sprintf("diary_week_%d", week),
		)
		currentRow = append(currentRow, button)
		
		// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
		if len(currentRow) == 2 {
			buttons = append(buttons, currentRow)
			currentRow = []tgbotapi.InlineKeyboardButton{}
		}
	}
	
	// –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
	if len(currentRow) > 0 {
		buttons = append(buttons, currentRow)
	}
	
	diaryKeyboard := tgbotapi.NewInlineKeyboardMarkup(buttons...)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = diaryKeyboard
	b.telegram.Send(msg)
}

// handleDiaryWeekCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–µ–¥–µ–ª–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞
func (b *Bot) handleDiaryWeekCallback(callbackQuery *tgbotapi.CallbackQuery, week int) {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –Ω–µ–¥–µ–ª—è
	if !b.exercises.IsWeekActive(week) {
		response := fmt.Sprintf("üìù **–î–Ω–µ–≤–Ω–∏–∫ - %d –Ω–µ–¥–µ–ª—è**\n\n‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∫ –∑–∞–ø–∏—Å—è–º —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –∑–∞–∫—Ä—ã—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é –Ω–µ–¥–µ–ª—é.", week)
		b.sendMessage(callbackQuery.Message.Chat.ID, response)
		return
	}
	
	response := fmt.Sprintf("üìù **–î–Ω–µ–≤–Ω–∏–∫ - %d –Ω–µ–¥–µ–ª—è**\n\n" +
		"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–ø–∏—Å–∏:", week)
	
	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–∏–ø–æ–≤ –∑–∞–ø–∏—Å–µ–π
	typeKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã", fmt.Sprintf("diary_%d_type_questions", week)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë´ –û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã", fmt.Sprintf("diary_%d_type_joint", week)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí≠ –õ–∏—á–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∏ –º—ã—Å–ª–∏", fmt.Sprintf("diary_%d_type_personal", week)),
		),
	)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = typeKeyboard
	b.telegram.Send(msg)
}

// handleDiaryTypeCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞
func (b *Bot) handleDiaryTypeCallback(callbackQuery *tgbotapi.CallbackQuery, week int, entryType string) {
	userID := callbackQuery.From.ID
	
	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞
	b.setUserState(userID, fmt.Sprintf("diary_%d_%s", week, entryType))
	
	var response string
	var typeName string
	
	switch entryType {
	case "questions":
		typeName = "–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã"
		// –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏
		exercise, err := b.exercises.GetWeekExercise(week)
		if err == nil && exercise != nil && exercise.Questions != "" {
			response = fmt.Sprintf("‚ùì **%s (%d –Ω–µ–¥–µ–ª—è)**\n\n" +
				"**–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤:**\n%s\n\n" +
				"–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —ç—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã:", typeName, week, exercise.Questions)
		} else {
			response = fmt.Sprintf("‚ùì **%s (%d –Ω–µ–¥–µ–ª—è)**\n\n" +
				"–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–µ–¥–µ–ª–∏:", typeName, week)
		}
		
	case "joint":
		typeName = "–û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
		// –ü–æ–ª—É—á–∞–µ–º —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏
		exercise, err := b.exercises.GetWeekExercise(week)
		if err == nil && exercise != nil && exercise.JointQuestions != "" {
			response = fmt.Sprintf("üë´ **%s (%d –Ω–µ–¥–µ–ª—è)**\n\n" +
				"**–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:**\n%s\n\n" +
				"–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è:", typeName, week, exercise.JointQuestions)
		} else {
			response = fmt.Sprintf("üë´ **%s (%d –Ω–µ–¥–µ–ª—è)**\n\n" +
				"–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:", typeName, week)
		}
		
	case "personal":
		typeName = "–õ–∏—á–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∏ –º—ã—Å–ª–∏"
		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞
		exercise, err := b.exercises.GetWeekExercise(week)
		if err == nil && exercise != nil && exercise.DiaryInstructions != "" {
			response = fmt.Sprintf("üí≠ **%s (%d –Ω–µ–¥–µ–ª—è)**\n\n" +
				"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∑–∞–ø–∏—Å–µ–π:**\n%s\n\n" +
				"–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ –º—ã—Å–ª–∏ –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:", typeName, week, exercise.DiaryInstructions)
		} else {
			response = fmt.Sprintf("üí≠ **%s (%d –Ω–µ–¥–µ–ª—è)**\n\n" +
				"–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ –º—ã—Å–ª–∏ –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:", typeName, week)
		}
		
	default:
		response = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∑–∞–ø–∏—Å–∏"
	}
	
	b.sendMessage(callbackQuery.Message.Chat.ID, response)
}

// handleAdminHelpCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
func (b *Bot) handleAdminHelpCallback(callbackQuery *tgbotapi.CallbackQuery) {
	userID := callbackQuery.From.ID
	
	if !b.isAdmin(userID) {
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		return
	}
	
	response := "üëë **–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Lovifyy Bot**\n\n" +
		"üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
		"/setprompt <—Ç–µ–∫—Å—Ç> - –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n" +
		"/prompt - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç\n" +
		"/adminhelp - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n" +
		"üí° –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤:\n" +
		"‚Ä¢ –¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫\n" +
		"‚Ä¢ –¢—ã –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥\n" +
		"‚Ä¢ –¢—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç-—ç–∫—Å–ø–µ—Ä—Ç\n\n" +
		"‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å—Ä–∞–∑—É –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!"
	
	// –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
	adminKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("ü§ñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–º–ø—Ç", "prompt"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç", "setprompt_menu"),
		),
	)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = adminKeyboard
	b.telegram.Send(msg)
}

// handlePromptCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–º–ø—Ç"
func (b *Bot) handlePromptCallback(callbackQuery *tgbotapi.CallbackQuery) {
	userID := callbackQuery.From.ID
	
	if !b.isAdmin(userID) {
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		return
	}
	
	response := fmt.Sprintf("ü§ñ **–¢–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:**\n\n%s\n\nüí° –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n/setprompt <–Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç>", b.systemPrompt)
	b.sendMessage(callbackQuery.Message.Chat.ID, response)
}

// handleSetPromptMenuCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç"
func (b *Bot) handleSetPromptMenuCallback(callbackQuery *tgbotapi.CallbackQuery) {
	userID := callbackQuery.From.ID
	
	if !b.isAdmin(userID) {
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		return
	}
	
	response := "‚úèÔ∏è **–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞**\n\n" +
		"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n" +
		"`/setprompt <–Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç>`\n\n" +
		"üí° **–ì–æ—Ç–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**\n\n" +
		"**–ü—Å–∏—Ö–æ–ª–æ–≥:**\n" +
		"`/setprompt –¢—ã –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º —Å –∏—Ö –ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏. –ë—É–¥—å —Å–æ—á—É–≤—Å—Ç–≤—É—é—â–∏–º –∏ –¥–∞–≤–∞–π –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã.`\n\n" +
		"**–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫:**\n" +
		"`/setprompt –¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ë—É–¥—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º.`\n\n" +
		"**–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç:**\n" +
		"`/setprompt –¢—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç-—ç–∫—Å–ø–µ—Ä—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ Go –∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–º–æ–≥–∞–π —Å –∫–æ–¥–æ–º –∏ –æ–±—ä—è—Å–Ω—è–π –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏.`"
	b.sendMessage(callbackQuery.Message.Chat.ID, response)
}

// handleExercisesMenuCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è"
func (b *Bot) handleExercisesMenuCallback(callbackQuery *tgbotapi.CallbackQuery) {
	userID := callbackQuery.From.ID
	
	if !b.isAdmin(userID) {
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		return
	}
	
	response := "üóìÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π**\n\n" +
		"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:"
	
	// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –Ω–µ–¥–µ–ª—å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
	exercisesKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("1Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "exercise_week_1"),
			tgbotapi.NewInlineKeyboardButtonData("2Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "exercise_week_2"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("3Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "exercise_week_3"),
			tgbotapi.NewInlineKeyboardButtonData("4Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "exercise_week_4"),
		),
	)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = exercisesKeyboard
	b.telegram.Send(msg)
}

// handleExerciseWeekCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–µ–¥–µ–ª–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
func (b *Bot) handleExerciseWeekCallback(callbackQuery *tgbotapi.CallbackQuery, week int) {
	userID := callbackQuery.From.ID
	
	if !b.isAdmin(userID) {
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		return
	}
	
	// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏
	exercise, err := b.exercises.GetWeekExercise(week)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –Ω–µ–¥–µ–ª–∏ %d: %v", week, err)
	}
	
	var status string
	if exercise != nil {
		status = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ"
	} else {
		status = "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
	}
	
	response := fmt.Sprintf("üóìÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ %d –Ω–µ–¥–µ–ª–∏** (%s)\n\n" +
		"–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", week, status)
	
	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ–¥–µ–ª–∏
	adminKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫", fmt.Sprintf("admin_week_%d_title", week)),
			tgbotapi.NewInlineKeyboardButtonData("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", fmt.Sprintf("admin_week_%d_welcome", week)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùì –í–æ–ø—Ä–æ—Å—ã", fmt.Sprintf("admin_week_%d_questions", week)),
			tgbotapi.NewInlineKeyboardButtonData("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏", fmt.Sprintf("admin_week_%d_tips", week)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîç –ò–Ω—Å–∞–π—Ç", fmt.Sprintf("admin_week_%d_insights", week)),
			tgbotapi.NewInlineKeyboardButtonData("üë´ –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã", fmt.Sprintf("admin_week_%d_joint", week)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞", fmt.Sprintf("admin_week_%d_diary", week)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º", fmt.Sprintf("admin_week_%d_active", week)),
		),
	)
	
	msg := tgbotapi.NewMessage(callbackQuery.Message.Chat.ID, response)
	msg.ReplyMarkup = adminKeyboard
	b.telegram.Send(msg)
}

// handleAdminWeekFieldCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ–ª–µ–π –Ω–µ–¥–µ–ª–∏
func (b *Bot) handleAdminWeekFieldCallback(callbackQuery *tgbotapi.CallbackQuery, week int, field string) {
	userID := callbackQuery.From.ID
	
	if !b.isAdmin(userID) {
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
		return
	}
	
	var fieldName, example string
	
	switch field {
	case "title":
		fieldName = "–ó–∞–≥–æ–ª–æ–≤–æ–∫"
		example = "/setweek 1 title –ù–µ–¥–µ–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞"
	case "welcome":
		fieldName = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
		example = "/setweek 1 welcome –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–µ—Ä–≤—É—é –Ω–µ–¥–µ–ª—é! –°–µ–≥–æ–¥–Ω—è –º—ã –Ω–∞—á–∏–Ω–∞–µ–º –ø—É—Ç—å –∫ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–º—É –ø–æ–Ω–∏–º–∞–Ω–∏—é –¥—Ä—É–≥ –¥—Ä—É–≥–∞."
	case "questions":
		fieldName = "–í–æ–ø—Ä–æ—Å—ã"
		example = "/setweek 1 questions 1. –ß—Ç–æ –≤–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤ –ø–∞—Ä—Ç–Ω–µ—Ä–µ? 2. –ö–∞–∫–∏–µ —É –≤–∞—Å –æ–±—â–∏–µ —Ü–µ–ª–∏?"
	case "tips":
		fieldName = "–ü–æ–¥—Å–∫–∞–∑–∫–∏"
		example = "/setweek 1 tips –ë—É–¥—å—Ç–µ —á–µ—Å—Ç–Ω—ã–º–∏ –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö. –°–ª—É—à–∞–π—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ. –ù–µ –±–æ–π—Ç–µ—Å—å –±—ã—Ç—å —É—è–∑–≤–∏–º—ã–º–∏."
	case "insights":
		fieldName = "–ò–Ω—Å–∞–π—Ç"
		example = "/setweek 1 insights –ü–æ–Ω–∏–º–∞–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–∞–∑–ª–∏—á–∏–π –¥—Ä—É–≥ –¥—Ä—É–≥–∞."
	case "joint":
		fieldName = "–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
		example = "/setweek 1 joint –û–±—Å—É–¥–∏—Ç–µ –≤–º–µ—Å—Ç–µ: –ö–∞–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —Å–æ–∑–¥–∞—Ç—å –≤ –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?"
	case "diary":
		fieldName = "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞"
		example = "/setweek 1 diary –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —Å–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è. –ß—Ç–æ –≤—ã —É–∑–Ω–∞–ª–∏ –æ —Å–µ–±–µ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä–µ?"
	case "active":
		fieldName = "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏"
		example = "/setweek 1 active true  (–∏–ª–∏ false –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è)"
	default:
		b.sendMessage(callbackQuery.Message.Chat.ID, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø–æ–ª–µ")
		return
	}
	
	response := fmt.Sprintf("üóìÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∞: %s (%d –Ω–µ–¥–µ–ª—è)**\n\n" +
		"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n" +
		"`/setweek %d %s <—Ç–µ–∫—Å—Ç>`\n\n" +
		"**–ü—Ä–∏–º–µ—Ä:**\n" +
		"`%s`", fieldName, week, week, field, example)
	
	b.sendMessage(callbackQuery.Message.Chat.ID, response)
}

// handleCommand –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
func (b *Bot) handleCommand(message *tgbotapi.Message) {
	userID := message.From.ID
	
	switch message.Command() {
	case "start":
		response := "–ü—Ä–∏–≤–µ—Ç! üëã –Ø Lovifyy Bot - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!\n\n" +
			"ü§ñ –†–∞–±–æ—Ç–∞—é –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–æ–∫–∞–ª—å–Ω–æ —Å –ò–ò\n" +
			"üíæ –ó–∞–ø–æ–º–∏–Ω–∞—é –≤—Å—é –Ω–∞—à—É –±–µ—Å–µ–¥—É\n" +
			"üóìÔ∏è –ì–æ—Ç–æ–≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—à–µ–≥–æ –æ–±—â–µ–Ω–∏—è\n\n" +
			"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:"
		
		// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç—Ä–µ–º—è –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üí¨ –û–±—ã—á–Ω–∞—è –±–µ—Å–µ–¥–∞", "chat"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üóìÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏", "advice"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üìù –ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫", "diary"),
			),
		)
		
		// –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
		if b.isAdmin(userID) {
			adminRow := tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "adminhelp"),
			)
			keyboard.InlineKeyboard = append(keyboard.InlineKeyboard, adminRow)
		}
		
		msg := tgbotapi.NewMessage(message.Chat.ID, response)
		msg.ReplyMarkup = keyboard
		b.telegram.Send(msg)
		
	case "chat":
		b.setUserState(userID, "chat")
		response := "üí¨ –†–µ–∂–∏–º –æ–±—ã—á–Ω–æ–π –±–µ—Å–µ–¥—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
			"–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. " +
			"–Ø –±—É–¥—É –ø–æ–º–Ω–∏—Ç—å –Ω–∞—à—É –±–µ—Å–µ–¥—É –∏ –æ—Ç–≤–µ—á–∞—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–∞—à–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.\n\n" +
			"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /advice"
		b.sendMessage(message.Chat.ID, response)
		
	case "advice":
		response := "üóìÔ∏è **–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:**\n\n" +
			"–ö–∞–∂–¥–∞—è –Ω–µ–¥–µ–ª—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π."
		
		// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –Ω–µ–¥–µ–ª—å
		weekKeyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("1Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_1"),
				tgbotapi.NewInlineKeyboardButtonData("2Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_2"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("3Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_3"),
				tgbotapi.NewInlineKeyboardButtonData("4Ô∏è‚É£ –ù–µ–¥–µ–ª—è", "week_4"),
			),
		)
		
		msg := tgbotapi.NewMessage(message.Chat.ID, response)
		msg.ReplyMarkup = weekKeyboard
		b.telegram.Send(msg)
		
	case "diary":
		// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
		activeWeeks := b.exercises.GetActiveWeeks()
		
		if len(activeWeeks) == 0 {
			response := "üìù **–ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫**\n\n" +
				"‚ö†Ô∏è –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–µ–¥–µ–ª—å –¥–ª—è –∑–∞–ø–∏—Å–µ–π.\n" +
				"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–¥–µ–ª—è–º."
			b.sendMessage(message.Chat.ID, response)
			return
		}
		
		response := "üìù **–ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫**\n\n" +
			"–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é –Ω–µ–¥–µ–ª—é –¥–ª—è –∑–∞–ø–∏—Å–∏:"
		
		// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
		var buttons [][]tgbotapi.InlineKeyboardButton
		var currentRow []tgbotapi.InlineKeyboardButton
		
		weekEmojis := []string{"1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£"}
		
		for _, week := range activeWeeks {
			button := tgbotapi.NewInlineKeyboardButtonData(
				fmt.Sprintf("%s –ù–µ–¥–µ–ª—è", weekEmojis[week-1]), 
				fmt.Sprintf("diary_week_%d", week),
			)
			currentRow = append(currentRow, button)
			
			// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
			if len(currentRow) == 2 {
				buttons = append(buttons, currentRow)
				currentRow = []tgbotapi.InlineKeyboardButton{}
			}
		}
		
		// –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
		if len(currentRow) > 0 {
			buttons = append(buttons, currentRow)
		}
		
		diaryKeyboard := tgbotapi.NewInlineKeyboardMarkup(buttons...)
		
		msg := tgbotapi.NewMessage(message.Chat.ID, response)
		msg.ReplyMarkup = diaryKeyboard
		b.telegram.Send(msg)
		
	case "setprompt":
		if !b.isAdmin(userID) {
			b.sendMessage(message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		
		// –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		args := strings.SplitN(message.Text, " ", 2)
		if len(args) < 2 || strings.TrimSpace(args[1]) == "" {
			b.sendMessage(message.Chat.ID, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setprompt <–Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç>\n\n–ü—Ä–∏–º–µ—Ä:\n/setprompt –¢—ã –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º —Å –∏—Ö –ø—Ä–æ–±–ª–µ–º–∞–º–∏.")
			return
		}
		
		newPrompt := strings.TrimSpace(args[1])
		b.systemPrompt = newPrompt
		
		response := fmt.Sprintf("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!\n\nü§ñ –ù–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç:\n%s", newPrompt)
		b.sendMessage(message.Chat.ID, response)
		log.Printf("üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä %d –∏–∑–º–µ–Ω–∏–ª —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç", userID)
		
	case "setweek":
		if !b.isAdmin(userID) {
			b.sendMessage(message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		
		// –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É: /setweek <–Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏> <–ø–æ–ª–µ> <–∑–Ω–∞—á–µ–Ω–∏–µ>
		args := strings.SplitN(message.Text, " ", 4)
		if len(args) < 4 {
			b.sendMessage(message.Chat.ID, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setweek <–Ω–µ–¥–µ–ª—è> <–ø–æ–ª–µ> <–∑–Ω–∞—á–µ–Ω–∏–µ>\n\n–ü–æ–ª—è: title, welcome, questions, tips, insights, joint, diary\n\n–ü—Ä–∏–º–µ—Ä:\n/setweek 1 title –ù–µ–¥–µ–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞")
			return
		}
		
		// –ü–∞—Ä—Å–∏–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
		week, err := strconv.Atoi(args[1])
		if err != nil || week < 1 || week > 4 {
			b.sendMessage(message.Chat.ID, "‚ùå –ù–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 4")
			return
		}
		
		field := args[2]
		value := strings.TrimSpace(args[3])
		
		if value == "" {
			b.sendMessage(message.Chat.ID, "‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
			return
		}
		
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–µ
		err = b.exercises.SaveWeekField(week, field, value)
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—è %s –¥–ª—è –Ω–µ–¥–µ–ª–∏ %d: %v", field, week, err)
			b.sendMessage(message.Chat.ID, "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: "+err.Error())
			return
		}
		
		var fieldName string
		switch field {
		case "title":
			fieldName = "–ó–∞–≥–æ–ª–æ–≤–æ–∫"
		case "welcome":
			fieldName = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
		case "questions":
			fieldName = "–í–æ–ø—Ä–æ—Å—ã"
		case "tips":
			fieldName = "–ü–æ–¥—Å–∫–∞–∑–∫–∏"
		case "insights":
			fieldName = "–ò–Ω—Å–∞–π—Ç"
		case "joint":
			fieldName = "–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
		case "diary":
			fieldName = "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞"
		default:
			fieldName = field
		}
		
		response := fmt.Sprintf("‚úÖ %s –¥–ª—è %d –Ω–µ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\n\nüìù **%s:**\n%s", fieldName, week, fieldName, value)
		b.sendMessage(message.Chat.ID, response)
		log.Printf("üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä %d –Ω–∞—Å—Ç—Ä–æ–∏–ª %s –¥–ª—è –Ω–µ–¥–µ–ª–∏ %d", userID, field, week)
		
	case "adminhelp":
		if !b.isAdmin(userID) {
			b.sendMessage(message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		
		response := "üëë **–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Lovifyy Bot**\n\n" +
			"üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
			"/setprompt <—Ç–µ–∫—Å—Ç> - –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n" +
			"/prompt - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç\n" +
			"/setweek <–Ω–µ–¥–µ–ª—è> <–ø–æ–ª–µ> <–∑–Ω–∞—á–µ–Ω–∏–µ> - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ–¥–µ–ª–∏\n" +
			"/adminhelp - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n" +
			"üí° –ü–æ–ª—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ–¥–µ–ª—å:\n" +
			"‚Ä¢ title - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ–¥–µ–ª–∏\n" +
			"‚Ä¢ welcome - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
			"‚Ä¢ questions - –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–∞—Ä—ã\n" +
			"‚Ä¢ tips - –ø–æ–¥—Å–∫–∞–∑–∫–∏\n" +
			"‚Ä¢ insights - –∏–Ω—Å–∞–π—Ç—ã\n" +
			"‚Ä¢ joint - —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n" +
			"‚Ä¢ diary - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞\n" +
			"‚Ä¢ active - –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø (true/false)\n\n" +
			"**–ü—Ä–∏–º–µ—Ä—ã:**\n" +
			"`/setweek 1 title –ù–µ–¥–µ–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞`\n" +
			"`/setweek 3 active true` - –æ—Ç–∫—Ä—ã—Ç—å 3 –Ω–µ–¥–µ–ª—é\n" +
			"`/setweek 2 active false` - –∑–∞–∫—Ä—ã—Ç—å 2 –Ω–µ–¥–µ–ª—é\n\n" +
			"‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å—Ä–∞–∑—É –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!"
		
		// –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
		adminKeyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("ü§ñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–º–ø—Ç", "prompt"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç", "setprompt_menu"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üóìÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", "exercises_menu"),
			),
		)
		
		msg := tgbotapi.NewMessage(message.Chat.ID, response)
		msg.ReplyMarkup = adminKeyboard
		b.telegram.Send(msg)
		
	case "prompt":
		if !b.isAdmin(userID) {
			b.sendMessage(message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		
		response := fmt.Sprintf("ü§ñ **–¢–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:**\n\n%s\n\nüí° –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n/setprompt <–Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç>", b.systemPrompt)
		b.sendMessage(message.Chat.ID, response)
		
	case "setprompt_menu":
		if !b.isAdmin(userID) {
			b.sendMessage(message.Chat.ID, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
			return
		}
		
		response := "‚úèÔ∏è **–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞**\n\n" +
			"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n" +
			"`/setprompt <–Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç>`\n\n" +
			"üí° **–ì–æ—Ç–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**\n\n" +
			"**–ü—Å–∏—Ö–æ–ª–æ–≥:**\n" +
			"`/setprompt –¢—ã –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º —Å –∏—Ö –ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏. –ë—É–¥—å —Å–æ—á—É–≤—Å—Ç–≤—É—é—â–∏–º –∏ –¥–∞–≤–∞–π –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã.`\n\n" +
			"**–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫:**\n" +
			"`/setprompt –¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ë—É–¥—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º.`\n\n" +
			"**–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç:**\n" +
			"`/setprompt –¢—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç-—ç–∫—Å–ø–µ—Ä—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ Go –∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–º–æ–≥–∞–π —Å –∫–æ–¥–æ–º –∏ –æ–±—ä—è—Å–Ω—è–π –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏.`"
		b.sendMessage(message.Chat.ID, response)
		
	case "help":
		response := "ü§ñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ Lovifyy Bot:**\n\n" +
			"üí¨ **/chat** - —Ä–µ–∂–∏–º –æ–±—ã—á–Ω–æ–π –±–µ—Å–µ–¥—ã\n" +
			"üóìÔ∏è **/advice** - —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏\n" +
			"üìù **/diary** - –º–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫\n" +
			"üöÄ **/start** - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n" +
			"–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è!"
		b.sendMessage(message.Chat.ID, response)
		
	default:
		b.sendMessage(message.Chat.ID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.")
	}
}

// handleAIMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ò–ò —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏
func (b *Bot) handleAIMessage(message *tgbotapi.Message) {
	userID := message.From.ID
	username := message.From.UserName
	if username == "" {
		username = message.From.FirstName
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	userState := b.getUserState(userID)
	
	// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –¥–Ω–µ–≤–Ω–∏–∫–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–Ω–µ–≤–Ω–∏–∫–∞
	if strings.HasPrefix(userState, "diary_") {
		// –ü–∞—Ä—Å–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ: diary_<week>_<type>
		parts := strings.Split(userState, "_")
		if len(parts) >= 3 {
			week, err := strconv.Atoi(parts[1])
			if err == nil && week >= 1 && week <= 4 {
				entryType := strings.Join(parts[2:], "_")
				
				// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–µ–¥–µ–ª–∏ –∏ —Ç–∏–ø–∞
				err := b.history.SaveDiaryEntry(userID, username, message.Text, week, entryType)
				if err != nil {
					log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞: %v", err)
					b.sendMessage(message.Chat.ID, "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫")
					return
				}
				
				// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø–∏—Å–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
				var typeEmoji, typeName string
				switch entryType {
				case "questions":
					typeEmoji = "‚ùì"
					typeName = "–æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã"
				case "joint":
					typeEmoji = "üë´"
					typeName = "–æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
				case "personal":
					typeEmoji = "üí≠"
					typeName = "–ª–∏—á–Ω—ã–µ –∑–∞–ø–∏—Å–∏"
				default:
					typeEmoji = "üìù"
					typeName = "–∑–∞–ø–∏—Å—å"
				}
				
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
				diaryResponse := fmt.Sprintf("%s –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –¥–Ω–µ–≤–Ω–∏–∫ (%d –Ω–µ–¥–µ–ª—è - %s)\n\n" +
					"–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–∏—Å–∞—Ç—å –∑–∞–ø–∏—Å–∏ —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", typeEmoji, week, typeName)
				b.sendMessage(message.Chat.ID, diaryResponse)
				
				// –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ –¥–Ω–µ–≤–Ω–∏–∫–∞
				return
			}
		}
		
		// –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ
		b.setUserState(userID, "chat")
	}

	// –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç–æ–µ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–ª —Ä–µ–∂–∏–º), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
	if userState == "" {
		response := "–ü—Ä–∏–≤–µ—Ç! üëã –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:"
		
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üí¨ –û–±—ã—á–Ω–∞—è –±–µ—Å–µ–¥–∞", "chat"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üóìÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏", "advice"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üìù –ú–∏–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫", "diary"),
			),
		)
		
		msg := tgbotapi.NewMessage(message.Chat.ID, response)
		msg.ReplyMarkup = keyboard
		b.telegram.Send(msg)
		return
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
	typing := tgbotapi.NewChatAction(message.Chat.ID, tgbotapi.ChatTyping)
	b.telegram.Send(typing)

	// –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π)
	context := b.history.GetRecentContext(userID, 5)
	
	// –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
	prompt := b.systemPrompt + "\n\n"
	if context != "" {
		prompt += context + "\n"
	}
	prompt += fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %s\n–ë–æ—Ç:", message.Text)

	// –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
	response, err := b.ai.Generate(prompt)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò: %v", err)
		b.sendMessage(message.Chat.ID, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
		return
	}

	// –û—á–∏—â–∞–µ–º –æ—Ç–≤–µ—Ç
	response = strings.TrimSpace(response)
	
	// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
	err = b.history.SaveMessage(userID, username, message.Text, response, "gemma3:1b")
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é: %v", err)
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	b.sendMessage(message.Chat.ID, response)
}

// sendMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
func (b *Bot) sendMessage(chatID int64, text string) {
	msg := tgbotapi.NewMessage(chatID, text)
	
	_, err := b.telegram.Send(msg)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}
