package tests

import (
	"fmt"
	"os"
	"testing"
	"Lovifyy_bot/internal/ai"
)

func TestOpenAIClient(t *testing.T) {
	fmt.Println("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º OpenAI –∫–ª–∏–µ–Ω—Ç...")
	
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
	apiKey := os.Getenv("OPENAI_API_KEY")
	if apiKey == "" {
		t.Skip("OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
		return
	}
	
	client := ai.NewOpenAIClient("gpt-4o-mini")
	
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
	if err := client.TestConnection(); err != nil {
		t.Logf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenAI: %v", err)
		t.Skip("OpenAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
		return
	}
	
	// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
	fmt.Println("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å...")
	response, err := client.Generate("–°–∫–∞–∂–∏ –ø—Ä–æ—Å—Ç–æ '–ü—Ä–∏–≤–µ—Ç!' –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤")
	if err != nil {
		t.Errorf("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: %v", err)
		return
	}
	
	fmt.Printf("‚úÖ –û—Ç–≤–µ—Ç OpenAI: '%s'\n", response)
	
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π
	if response == "" {
		t.Error("‚ùå –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
	} else {
		fmt.Println("‚úÖ OpenAI –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
	}
}
