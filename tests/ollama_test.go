package tests

import (
	"fmt"
	"log"
	"testing"

	"Lovifyy_bot/internal/ai"
)

func TestOllamaConnection(t *testing.T) {
	fmt.Println("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Ollama...")
	
	// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è –º–æ–¥–µ–ª–∏ Qwen
	client := ai.NewOllamaClient("qwen3:8b")
	
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
	fmt.Println("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Ollama...")
	if err := client.TestConnection(); err != nil {
		t.Errorf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Ollama: %v", err)
		return
	}
	
	// –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
	fmt.Println("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–æ–≤...")
	
	testQuestions := []string{
		"–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
		"–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç",
		"–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?",
	}
	
	for i, question := range testQuestions {
		fmt.Printf("\n%d. –í–æ–ø—Ä–æ—Å: %s\n", i+1, question)
		
		response, err := client.Generate(question)
		if err != nil {
			t.Errorf("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ '%s': %v", question, err)
			continue
		}
		
		if response == "" {
			t.Errorf("‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ '%s'", question)
			continue
		}
		
		fmt.Printf("   ü§ñ –û—Ç–≤–µ—Ç: %s\n", response)
	}
	
	fmt.Println("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
}

func TestOllamaManual() {
	fmt.Println("üß™ –†—É—á–Ω–æ–π —Ç–µ—Å—Ç Ollama...")
	
	client := ai.NewOllamaClient("qwen3:8b")
	
	if err := client.TestConnection(); err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞: %v\n", err)
		fmt.Println("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:")
		fmt.Println("1. –°–∫–∞—á–∞–π—Ç–µ Ollama: https://ollama.com/download/windows")
		fmt.Println("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ")
		fmt.Println("3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: ollama pull qwen3:8b")
		fmt.Println("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞")
		return
	}
	
	testQuestions := []string{
		"–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
		"–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç",
		"–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?",
	}
	
	fmt.Println("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–æ–≤...")
	for i, question := range testQuestions {
		fmt.Printf("\n%d. –í–æ–ø—Ä–æ—Å: %s\n", i+1, question)
		
		response, err := client.Generate(question)
		if err != nil {
			fmt.Printf("   ‚ùå –û—à–∏–±–∫–∞: %v\n", err)
			continue
		}
		
		fmt.Printf("   ü§ñ –û—Ç–≤–µ—Ç: %s\n", response)
	}
	
	fmt.Println("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
	fmt.Println("üí° –ï—Å–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞!")
}
